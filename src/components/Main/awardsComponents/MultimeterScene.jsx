/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 scene.gltf --transform
Author: Lara Sophie Sch√ºtt (https://sketchfab.com/literallylara)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/cc0-generic-multimeter-f7b47524f3cb4af6a8e7ae1bbe21f671
Title: [CC0] Generic Multimeter
*/

import React from "react";
import { useGLTF } from "@react-three/drei";

export default function Model(props) {
  const { nodes, materials } = useGLTF(
    "/assets/3dModels/multimeter/scene-transformed.glb"
  );
  return (
    <group {...props} dispose={null} rotation={[Math.PI / 2, 0, 0]}>
      <group position={[-0.02, 0.03, -0.02]} scale={[0.89, 1, 1]}>
        <mesh
          geometry={nodes.Object_8.geometry}
          material={materials.Soft_Plastic_Translucent}
        />
        <mesh
          geometry={nodes.Object_9.geometry}
          material={materials.Soft_Plastic_Translucent}
        />
      </group>
      <group position={[0.02, 0.03, 0.06]}>
        <mesh
          geometry={nodes.Object_15.geometry}
          material={materials.Plastic_Red_Glossy}
        />
        <mesh
          geometry={nodes.Object_16.geometry}
          material={materials.Plastic_Black}
        />
      </group>
      <mesh
        geometry={nodes.Object_4.geometry}
        material={materials.Plastic_Black}
      />
      <mesh geometry={nodes.Object_5.geometry} material={materials.Text} />
      <mesh
        geometry={nodes.Object_6.geometry}
        material={materials.Text_Glossy}
      />
      <mesh
        geometry={nodes.Object_11.geometry}
        material={materials.Plastic_Black}
        position={[0, 0.03, 0.02]}
        rotation={[0, 0.2, 0]}
      />
      <mesh
        geometry={nodes.Object_13.geometry}
        material={materials.material}
        position={[0, 0.03, -0.04]}
        scale={[0.86, 0.02, 1]}
      />
      <mesh
        geometry={nodes.Object_18.geometry}
        material={materials.Soft_Plastic_Green}
      />
    </group>
  );
}

useGLTF.preload("/scene-transformed.glb");
